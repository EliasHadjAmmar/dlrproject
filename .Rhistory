res2 <- dat %>%
filter(death_year > 1500) %>%
filter(is.na(terr_id))
dat <- read_dta('/Users/eliashadjammar/Desktop/Projekte/families_rulers_imputed.dta')
res2 <- dat %>%
filter(death_year > 1500) %>%
filter(!is.na(terr_id))
res2 <- dat %>%
filter(death_year > 1500) %>%
filter(is.na(terr_id))
res2 <- dat %>%
filter(death_year > 1500)
dat %>%
is.na(terr_id)
is.na(dat$terr_id)
dat$terr_id %>% na_if("")
dat$terr_id %>% na_if("") %>% is.na()
dat$terr_id <- na_if(dat$terr_id, "")
res2 <- dat %>%
filter(death_year > 1500) %>%
filter(!is.na(terr_id))
library(tidyverse)
library(haven)
dat <- read_dta('/Users/eliashadjammar/Desktop/Projekte/families_rulers_imputed.dta')
dat$terr_id <- na_if(dat$terr_id, "")
res <- dat %>%
filter(death_year > 1500) %>%
filter(!is.na(terr_id))
View(res)
dat <- read_dta('/Users/eliashadjammar/Desktop/Projekte/families_rulers_imputed.dta')
dat$terr_id <- na_if(dat$terr_id, '')
res <- dat %>%
filter(death_year > 1500) %>%
filter(!is.na(terr_id))
write_csv(res, '/Users/eliashadjammar/GitHub/territories/issue35')
write_csv(res, '/Users/eliashadjammar/GitHub/territories/issue35/rulers1500.csv')
library(tidyverse)
library(haven)
dat <- read_dta('/Users/eliashadjammar/Desktop/Projekte/families_rulers_imputed.dta')
# Replace empty terr_ids with NA
dat$terr_id <- na_if(dat$terr_id, '')
# Obtain rulers who died after 1500
rulers1500 <- dat %>%
filter(death_year > 1500) %>%
filter(!is.na(terr_id))
# Drop cols not relevant to the task
rulers1500 <- rulers1500 %>%
select(id, family, name, terr_id, birth_year, death_year, start_reign, end_reign)
write_csv(rulers1500, '/Users/eliashadjammar/GitHub/territories/issue35/rulers1500.csv')
library(tidyverse)
library(haven)
dat <- read_dta('/Users/eliashadjammar/Desktop/Projekte/cities_families_1300_1918.dta')
dat <- read_dta('/Users/eliashadjammar/Desktop/Projekte/cities_families_1300_1918.dta')
View(dat)
View(dat)
summarise(dat)
summ <- summarise(dat)
View(summ)
summ %>%
group_by(terr_id)
dat %>%
group_by(terr_id)
grouped <- dat %>%
group_by(terr_id)
View(dat)
grouped <- dat %>%
group_by(terr_id) %>%
summarise()
View(grouped)
View(grouped)
View(dat)
View(dat)
grouped <- dat %>%
group_by(terr_id) %>%
summarise(count_cities = n())
View(grouped)
View(grouped)
grouped <- dat %>%
group_by(terr_id, year) %>%
summarise(count_cities = n())
View(grouped)
View(grouped)
max(grouped$count_cities)
min(grouped$count_cities)
summary(grouped$count_cities)
res <- dat %>%
group_by(terr_id, year) %>%
summarise(count_cities = n()) %>%
group_by(terr_id) %>%
summarise(max_cities = max(count_cities))
View(res)
View(res)
library(tidyverse)
library(haven)
dat <- read_dta('/Users/eliashadjammar/Desktop/Projekte/cities_families_1300_1918.dta')
terr_sizes <- dat %>%
group_by(terr_id, year) %>%
summarise(count_cities = n()) %>%
group_by(terr_id) %>%
summarise(max_cities = max(count_cities))
View(terr_sizes)
write_csv(terr_sizes, '/Users/eliashadjammar/GitHub/territories/issue35/territories-by-size.csv')
write_csv(terr_sizes, '/Users/eliashadjammar/GitHub/territories/issue35/territories_by_size.csv')
library(tidyverse)
rulers <- read_csv('/Users/eliashadjammar/GitHub/territories/issue35/rulers1500_confession.csv')
terr_sizes <- read_csv('/Users/eliashadjammar/GitHub/territories/issue35/territories_by_size.csv')
new <- merge(x = rulers, y = terr_sizes, by = 'terr_id')
new <- merge(x = rulers, y = terr_sizes, by = 'terr_id', all.x = TRUE)
max(new$passed)
summary(new$passed)
library(tidyverse)
rulers <- read_csv('/Users/eliashadjammar/GitHub/territories/issue35/rulers1500_confession.csv')
terr_sizes <- read_csv('/Users/eliashadjammar/GitHub/territories/issue35/territories_by_size.csv')
rulers_sorted <- merge(x = rulers, y = terr_sizes, by = 'terr_id', all.x = TRUE)
write_csv(rulers_sorted, '/Users/eliashadjammar/GitHub/territories/issue35/rulers1500_confession_sorted')
write_csv(rulers_sorted, '/Users/eliashadjammar/GitHub/territories/issue35/rulers1500_confession_sorted.csv')
library(tidyverse)
library(haven)
rulers_full <- read_dta('/Users/eliashadjammar/Desktop/Projekte/families_rulers_imputed.dta')
rulers_full %>%
mutate(terr_id = na_if(terr_id = ''))
rulers_full %>%
mutate(terr_id = na_if(terr_id = ''))
# Replace empty terr_ids with NA
rulers_full$terr_id <- na_if(rulers_full$terr_id, '')
library(tidyverse)
library(haven)
families <- read_dta('/Users/eliashadjammar/Desktop/Projekte/families_rulers_imputed.dta')
# Replace empty terr_ids with NA
families$terr_id <- na_if(families$terr_id, '')
# Obtain rulers who died after 1500
rulers1500 <- families %>%
filter(death_year > 1500) %>%
filter(!is.na(terr_id))
library(tidyverse)
library(haven)
### Obtain all rulers who lived after 1500 from families database
families <- read_dta('/Users/eliashadjammar/Desktop/Projekte/families_rulers_imputed.dta')
families$terr_id <- na_if(families$terr_id, '')
rulers1500 <- families %>%
filter(death_year > 1500) %>%
filter(!is.na(terr_id))
### Merge with territory size from cities database
cities <- read_dta('/Users/eliashadjammar/Desktop/Projekte/cities_families_1300_1918.dta')
terr_sizes <- cities %>%
group_by(terr_id, year) %>%
summarise(count_cities = n()) %>%
group_by(terr_id) %>%
summarise(max_cities = max(count_cities))
rulers1500_with_size <- merge(x = rulers1500, y = terr_sizes, by = 'terr_id', all.x = TRUE)
View(terr_sizes)
rulers1500_by_size <- rulers1500_with_size[order(-max_cities),]
rulers1500_by_size <- rulers1500_with_size[order(-rulers1500_with_size$max_cities),]
library(tidyverse)
library(haven)
families <- read_dta('/Users/eliashadjammar/Desktop/Projekte/families_rulers_imputed.dta')
families$terr_id <- na_if(families$terr_id, '')
rulers1500 <- families %>%
filter(death_year > 1500) %>%
filter(!is.na(terr_id))
cities <- read_dta('/Users/eliashadjammar/Desktop/Projekte/cities_families_1300_1918.dta')
terr_sizes <- cities %>%
group_by(terr_id, year) %>%
summarise(count_cities = n()) %>%
group_by(terr_id) %>%
summarise(max_cities = max(count_cities))
rulers1500_with_size <- merge(x = rulers1500, y = terr_sizes, by = 'terr_id', all.x = TRUE)
rulers1500_by_size <- rulers1500_with_size[order(-rulers1500_with_size$max_cities),]
rulers_final <- rulers1500_by_size %>%
select(id, family, name, terr_id, birth_year, death_year, start_reign, end_reign)
newcols <- c('startreign_true', 'endreign_true', 'confession0', 'confession1', 'year_confession1',
'inferred', 'source', 'notes')
rulers_final[,newcols] <- NA
rulers_final <- rulers1500_by_size %>%
select(id, family, name, terr_id, birth_year, death_year, start_reign, end_reign)
newcols <- c('checked','startreign_true', 'endreign_true', 'confession0', 'confession1',
'year_confession1', 'inferred', 'source', 'notes')
rulers_final[,newcols] <- NA
write_csv('/Users/eliashadjammar/GitHub/territories/issue35/ruler_confession_new.csv')
write_csv(rulers_final, '/Users/eliashadjammar/GitHub/territories/issue35/ruler_confession_new.csv')
library(tidyverse)
library(haven)
# Obtain all rulers who lived after 1500 from families database
families <- read_dta('/Users/eliashadjammar/Desktop/Projekte/families_rulers_imputed.dta')
families$terr_id <- na_if(families$terr_id, '')
rulers1500 <- families %>%
filter(death_year > 1500) %>%
filter(!is.na(terr_id))
# Merge with and sort by territory size from cities database
cities <- read_dta('/Users/eliashadjammar/Desktop/Projekte/cities_families_1300_1918.dta')
terr_sizes <- cities %>%
group_by(terr_id, year) %>%
summarise(count_cities = n()) %>%
group_by(terr_id) %>%
summarise(max_cities = max(count_cities))
rulers1500_with_size <- merge(x = rulers1500, y = terr_sizes, by = 'terr_id', all.x = TRUE)
rulers1500_by_size <- rulers1500_with_size[order(-rulers1500_with_size$max_cities),]
# Select relevant columns, add confession columns, and write to csv
rulers_final <- rulers1500_by_size %>%
select(id, family, name, max_cities, terr_id, birth_year, death_year, start_reign, end_reign)
newcols <- c('checked','startreign_true', 'endreign_true', 'confession0', 'confession1',
'year_confession1', 'inferred', 'source', 'notes')
rulers_final[,newcols] <- NA
write_csv(rulers_final, '/Users/eliashadjammar/GitHub/territories/issue35/ruler_confession_new.csv')
suppressPackageStartupMessages(library(tidyverse))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '~/GitHub/BA')
library(tidyverse)
library(cowplot)
library(viridisLite)
data <- read.csv("analysis/input/build.csv")
View(data)
View(data)
data <- read.csv("analysis/input/build.csv")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '~/GitHub/BA')
library(tidyverse)
library(cowplot)
library(viridisLite)
data <- read.csv("analysis/input/build.csv")
cities_life <- data %>%
filter(year %in% window) %>%
group_by(city_id) %>%
summarise(
lifetime_construction = sum(construction, na.rm=TRUE),
observations = sum(!is.na(construction)), # not meaningful observations - get rid of this
pop1875 = min(pop1875), # same as max(pop1875)
datayears = max(year) - min(year)
)
data <- read.csv("analysis/input/build.csv")
cities_life <- data %>%
group_by(city_id) %>%
summarise(
lifetime_construction = sum(construction, na.rm=TRUE),
observations = sum(!is.na(construction)), # not meaningful observations - get rid of this
pop1875 = min(pop1875), # same as max(pop1875)
datayears = max(year) - min(year)
)
View(cities_life)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '~/GitHub/BA')
library(tidyverse)
library(cowplot)
library(viridisLite)
data <- read.csv("analysis/input/build.csv")
cities_life <- data %>%
group_by(city_id) %>%
summarise(
lifetime_construction = sum(construction, na.rm=TRUE),
observations = sum(!is.na(construction)), # not super meaningful
pop1875 = min(pop1875), # should be same as max(pop1875)
datayears = max(year) - min(year)
)
ListCitiesNotNA <- function(data, outcome, window=1300:1918){
ids <- data %>%
filter(year %in% window) %>%
drop_na({{outcome}}) %>%
distinct(city_id) %>%
.$city_id
return(ids)
}
ListTopCities <- function(cities_life, which=1:8, by="obs", window=1300:1918){
cities_life <- cities_life |> filter(year %in% window)
if (by == "obs"){
top_ids <- cities_life %>%
arrange(desc(observations), desc(lifetime_construction))
} else {
top_ids <- cities_life %>%
arrange(desc(lifetime_construction), desc(observations))
}
return(top_ids$city_id[which])
}
# city list for comparison
const_cities <- ListCitiesNotNA(data, construction)
allen_cities <- ListCitiesNotNA(data, real_wage)
both <- intersect(const_cities, allen_cities)
# city lists for exploring construction
set.seed(151101)
top9 <- ListTopCities(data, which=1:9)
View(cities_life)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '~/GitHub/BA')
library(tidyverse)
library(cowplot)
library(viridisLite)
data <- read.csv("analysis/input/build.csv")
cities_life <- data %>%
group_by(city_id) %>%
summarise(
lifetime_construction = sum(construction, na.rm=TRUE),
observations = sum(!is.na(construction)), # not super meaningful
pop1875 = min(pop1875), # should be same as max(pop1875)
datayears = max(year) - min(year)
)
ListCitiesNotNA <- function(data, outcome, window=1300:1918){
ids <- data %>%
filter(year %in% window) %>%
drop_na({{outcome}}) %>%
distinct(city_id) %>%
.$city_id
return(ids)
}
ListTopCities <- function(cities_life, which=1:8, by="obs", window=1300:1918){
cities_life <- cities_life |> filter(year %in% window)
if (by == "obs"){
top_ids <- cities_life %>%
arrange(desc(observations), desc(lifetime_construction))
} else {
top_ids <- cities_life %>%
arrange(desc(lifetime_construction), desc(observations))
}
return(top_ids$city_id[which])
}
# city list for comparison
const_cities <- ListCitiesNotNA(data, construction)
allen_cities <- ListCitiesNotNA(data, real_wage)
both <- intersect(const_cities, allen_cities)
# city lists for exploring construction
set.seed(151101)
top9 <- ListTopCities(cities_life, which=1:9)
cities_life <- cities_life |> filter(year %in% window)
View(cities_life)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '~/GitHub/BA')
library(tidyverse)
library(cowplot)
library(viridisLite)
data <- read.csv("analysis/input/build.csv")
cities_life <- data %>%
group_by(city_id) %>%
summarise(
lifetime_construction = sum(construction, na.rm=TRUE),
observations = sum(!is.na(construction)), # not super meaningful
pop1875 = min(pop1875), # should be same as max(pop1875)
datayears = max(year) - min(year)
)
ListCitiesNotNA <- function(data, outcome, window=1300:1918){
ids <- data %>%
filter(year %in% window) %>%
drop_na({{outcome}}) %>%
distinct(city_id) %>%
.$city_id
return(ids)
}
ListTopCities <- function(data, which=1:8, by="obs", window=1300:1918){
cities_life <- data %>%
filter(year %in% window)
group_by(city_id) %>%
summarise(
lifetime_construction = sum(construction, na.rm=TRUE),
observations = sum(!is.na(construction)) # not super meaningful
)
if (by == "obs"){
top_ids <- cities_life %>%
arrange(desc(observations), desc(lifetime_construction))
} else {
top_ids <- cities_life %>%
arrange(desc(lifetime_construction), desc(observations))
}
return(top_ids$city_id[which])
}
# city list for comparison
const_cities <- ListCitiesNotNA(data, construction)
allen_cities <- ListCitiesNotNA(data, real_wage)
both <- intersect(const_cities, allen_cities)
# city lists for exploring construction
set.seed(151101)
top9 <- ListTopCities(data, which=1:9)
ListCitiesNotNA <- function(data, outcome, window=1300:1918){
ids <- data %>%
filter(year %in% window) %>%
drop_na({{outcome}}) %>%
distinct(city_id) %>%
.$city_id
return(ids)
}
ListTopCities <- function(data, which=1:8, by="obs", window=1300:1918){
cities_life <- data |>
filter(year %in% window) |>
group_by(city_id) |>
summarise(
lifetime_construction = sum(construction, na.rm=TRUE),
observations = sum(!is.na(construction)) # not super meaningful
)
if (by == "obs"){
top_ids <- cities_life |>
arrange(desc(observations), desc(lifetime_construction))
} else {
top_ids <- cities_life |>
arrange(desc(lifetime_construction), desc(observations))
}
return(top_ids$city_id[which])
}
# city list for comparison
const_cities <- ListCitiesNotNA(data, construction)
data <- read.csv("analysis/input/build.csv")
cities_life <- data %>%
group_by(city_id) %>%
summarise(
lifetime_construction = sum(construction, na.rm=TRUE),
observations = sum(!is.na(construction)), # not super meaningful
pop1875 = min(pop1875), # should be same as max(pop1875)
datayears = max(year) - min(year)
)
ListCitiesNotNA <- function(data, outcome, window=1300:1918){
ids <- data %>%
filter(year %in% window) %>%
drop_na({{outcome}}) %>%
distinct(city_id) %>%
.$city_id
return(ids)
}
ListTopCities <- function(data, which=1:8, by="obs", window=1300:1918){
cities_life <- data |>
filter(year %in% window) |>
group_by(city_id) |>
summarise(
lifetime_construction = sum(construction, na.rm=TRUE),
observations = sum(!is.na(construction)) # not super meaningful
)
if (by == "obs"){
top_ids <- cities_life |>
arrange(desc(observations), desc(lifetime_construction))
} else {
top_ids <- cities_life |>
arrange(desc(lifetime_construction), desc(observations))
}
return(top_ids$city_id[which])
}
# city list for comparison
const_cities <- ListCitiesNotNA(data, construction)
allen_cities <- ListCitiesNotNA(data, real_wage)
both <- intersect(const_cities, allen_cities)
# city lists for exploring construction
set.seed(151101)
top9 <- ListTopCities(data, which=1:9)
top16 <- ListTopCities(data, which=1:16)
random9 <- sample(const_cities, 9)
random16 <- sample(const_cities, 16)
PlotOutcomeLines <- function(data, citylist=NULL, outcome, colour_vec, window=1300:1918){
if (length(citylist) == 0){
city_list <- ListCitiesNotNA(data, {{outcome}}, window)
}
plot <- data %>%
filter(city_id %in% citylist & year %in% window) %>%
mutate(city_id = factor(city_id)) %>%
drop_na({{outcome}}) %>%
ggplot(aes(x=year, y={{outcome}}))+
geom_line(aes(colour=city_id))+
scale_color_manual("City", values=colour_vec)+
scale_x_continuous(limits=c(min(window), max(window)))
return(plot)
}
PlotHistograms <- function(data, citylist, binw=10){
data |>
filter(city_id %in% citylist) |>
mutate(city_id = as_factor(city_id)) |>
filter(construction > 0) |>
ggplot(aes(x=year))+
geom_histogram(aes(y=after_stat(density)), binwidth = binw)+
geom_density(aes(y=after_stat(density), colour="red"), show.legend = FALSE)+
facet_wrap(~city_id)
}
PlotDensity <- function(data, citylist, colour_vec, window=1300:1918){
data |>
filter(city_id %in% citylist & year %in% window) |>
mutate(city_id = as_factor(city_id)) |>
filter(construction > 0) |>
ggplot(aes(x=year))+
geom_density(aes(y=after_stat(density), colour=city_id))+
scale_color_manual("City", values=colour_vec)+
scale_x_continuous(limits=c(min(window), max(window)))
}
colour_vec <- c("gold", "cornflowerblue", "coral")
names(colour_vec) <- allen_cities
wage_plot <- PlotOutcomeLines(data, citylist=both, real_wage, colour_vec, window=1400:1800)
wratio_plot <- PlotOutcomeLines(data, citylist=both, welfare_ratio, colour_vec, window=1400:1800)
const_plot <- PlotDensity(data, citylist = both, colour_vec, window=1400:1800)
plot_grid(wage_plot, wratio_plot, const_plot, align="v", axis="b", ncols=1)
ggsave("const_wages.png", device = "png", path="analysis/output/exploration")
PlotHistograms(data, random16) +
ggtitle("Construction activity: random cities")
PlotHistograms(data, top16) +
ggtitle("Construction activity: cities with the most observations")
View(cities_life)
cities_life |>
ggplot(aes(x=pop1875, y=lifetime_construction))+
geom_point()
cities_life |>
ggplot(aes(x=log(pop1875), y=lifetime_construction))+
geom_point()
cities_life |>
ggplot(aes(x=log(pop1875), y=log(lifetime_construction)))+
geom_point()
cities_life |>
ggplot(aes(x=log(pop1875), y=lifetime_construction))+
geom_point()
cities_life |>
ggplot(aes(x=log(pop1875), y=lifetime_construction))+
geom_point()+
geom_smooth(method = "lm")
install.packages("geopkg")
install.packages("sf")
library(sf)
install.packages("sf")
library(sf)
install.packages(sf)
install.packages("sf")
library(sf)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
mapview(berlin)
